<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Свиридов Александр]]></title>
  <link href="http://sviridov.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://sviridov.github.io/"/>
  <updated>2014-07-13T21:09:47+06:00</updated>
  <id>http://sviridov.github.io/</id>
  <author>
    <name><![CDATA[Свиридов Александр]]></name>
    <email><![CDATA[sviridov.vmi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Emacs: статический анализ Ruby-кода]]></title>
    <link href="http://sviridov.github.io/blog/2014/02/20/emacs-ruby-static-code-analysis/"/>
    <updated>2014-02-20T14:22:10+06:00</updated>
    <id>http://sviridov.github.io/blog/2014/02/20/emacs-ruby-static-code-analysis</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/bbatsov/rubocop">Rubocop</a> &ndash; это полезный инструмент для любого Ruby-разработчика. <a href="https://github.com/bbatsov/rubocop">Rubocop</a> осуществляет статический анализ Ruby-кода основываясь на <a href="https://github.com/bbatsov/ruby-style-guide">Ruby Style Guide</a> и помогает сделать твой код (или код твоих коллег) чуточку читабельнее (а значит и лучше).</p>

<p>Вот только есть один минус &ndash; ручной запуск <a href="https://github.com/bbatsov/rubocop">Rubocop</a> из терминала. Сам понимаешь, хочется интеграции этого чуда в среду разработки, так чтобы оно само. Ну что же, давай заинтегрируем.</p>

<!-- more -->


<h2>rvm.el</h2>

<p>Ты ведь испольуешь <a href="http://rvm.io/">rvm</a> и <a href="http://bundler.io/">bundler</a>? Тогда мне не нужно объяснять тебе почему важно настроить взаимодействие <a href="http://www.gnu.org/software/emacs/">Emacs</a> и <a href="http://rvm.io/">rvm</a>.</p>

<p>Для этого дела нам потребуется пакет <a href="https://github.com/senny/rvm.el">rvm.el</a>. Его установка и настройка тривиальна в случае если у тебя настроен <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Packages.html#Packages">ELPA</a> (<a href="https://github.com/sviridov/.emacs.d/blob/master/config/init-package.el">пример конфига</a>). Добавь следующие строки в свой конфигурационный файл:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='common-lisp'><span class='line'><span class="c1">;; Устанавливаем пакет rvm.el</span>
</span><span class='line'><span class="p">(</span><span class="nv">require-package</span> <span class="ss">&#39;rvm</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Выбираем соответсвующую версию ruby (и версии гемов)</span>
</span><span class='line'><span class="c1">;; для каждого ruby-файла</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;ruby-mode-hook</span> <span class="nf">#&#39;</span><span class="nv">rvm-activate-corresponding-ruby</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Вот и все, <a href="https://github.com/senny/rvm.el">rvm.el</a> настроен.</p>

<h2>Flycheck</h2>

<p><a href="https://github.com/flycheck/flycheck">Flycheck</a> &ndash; это пакет, который является связуещей прослойкой между различными статическими анализаторами кода и <a href="http://www.gnu.org/software/emacs/">Emacs</a>. Штука крайне полезная, все детали по <a href="https://github.com/flycheck/flycheck">ссылке</a>. Итак, настройка:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='common-lisp'><span class='line'><span class="c1">;; Устанавливаем пакет Flycheck</span>
</span><span class='line'><span class="p">(</span><span class="nv">require-package</span> <span class="ss">&#39;flycheck</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Запускаем Flycheck глобально</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;after-init-hook</span> <span class="nf">#&#39;</span><span class="nv">global-flycheck-mode</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; или только для Ruby-mode</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;ruby-mode-hook</span> <span class="nf">#&#39;</span><span class="nv">flycheck-mode</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Запускаем проверки при открытие файла и после его сохранения</span>
</span><span class='line'><span class="p">(</span><span class="nv">setq-default</span> <span class="nv">flycheck-check-syntax-automatically</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">save</span> <span class="nv">mode-enabled</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Все, <a href="https://github.com/flycheck/flycheck">Flycheck</a> настроен. А знаешь что самое приятное? <a href="https://github.com/flycheck/flycheck">Flycheck</a> сам начнет использовать <a href="https://github.com/bbatsov/rubocop">Rubocop</a>! Добрая магия.</p>

<p><img src="http://sviridov.github.io/images/posts/emacs-with-flycheck-and-rubocop-1.png"></p>

<h2>P.S. rubocop-emacs</h2>

<p>Но есть еще маленькая штука о которой стоит упоминуть. Пакет <a href="https://github.com/bbatsov/rubocop-emacs">rubocop-emacs</a> от <a href="https://github.com/bbatsov">автора</a> <a href="https://github.com/bbatsov/rubocop">Rubocop</a>. Это очень простая обертка над &ldquo;терминальным&rdquo; <a href="https://github.com/bbatsov/rubocop">Rubocop</a>. А полезна она будет для автоматической коррекции части некрасивостей в твоем коде. Итак:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='common-lisp'><span class='line'><span class="c1">;; Устанавливаем rubocop-emacs</span>
</span><span class='line'><span class="p">(</span><span class="nv">require-package</span> <span class="ss">&#39;rubocop</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Добавляем rubocop-emacs к Ruby-mode</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;ruby-mode-hook</span> <span class="nf">#&#39;</span><span class="nv">rubocop-mode</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Перечитываем файл после его изменения вне Emacs</span>
</span><span class='line'><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">&#39;ruby-mode-hook</span> <span class="nf">#&#39;</span><span class="nv">auto-revert-mode</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Жми <strong><code>C-c C-r F</code></strong> и вуаля &ndash; код стал чуточку чище.</p>

<p><img src="http://sviridov.github.io/images/posts/emacs-with-flycheck-and-rubocop-2.png"></p>
]]></content>
  </entry>
  
</feed>
